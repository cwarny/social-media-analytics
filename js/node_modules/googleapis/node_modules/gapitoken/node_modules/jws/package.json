{
  "name": "jws",
  "version": "0.0.2",
  "description": "Implementation of JSON Web Signatures",
  "main": "index.js",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "test": "make test"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/brianloveswords/node-jws.git"
  },
  "keywords": [
    "jws",
    "json",
    "web",
    "signatures"
  ],
  "author": {
    "name": "Brian J Brennan"
  },
  "license": "MIT",
  "readmeFilename": "readme.md",
  "gitHead": "c0f6b27bcea5a2ad2e304d91c2e842e4076a6b03",
  "dependencies": {
    "tap": "~0.3.3",
    "base64url": "0.0.3"
  },
  "readme": "# jws  [![Build Status](https://secure.travis-ci.org/brianloveswords/node-jws.png)](http://travis-ci.org/brianloveswords/node-jws)\n\n[JSON Web Signatures](http://self-issued.info/docs/draft-ietf-jose-json-web-signature.html)\nfor node.\n\nThis was implemented against `draft-ietf-jose-json-web-signature-08`.\n\nThe following algorithms are supported:\n* HMAC SHA-256 (HS256)\n* RSA SHA-256 (RS256)\n\nWe yet support ECDSA yet (ES256/384/512) because OpenSSL doesn't support\nit as a message digest algorithm (it only supports `ecdsa-with-sha1`)\nwhich means we can't load it with `crypto.createSign` or\n`crypto.createVerify`. Hopefully this is forthcoming.\n\n# install\n\n```js\n$ npm install jws\n```\n\n# example\n\n```js\nconst jws = require('jws');\n\n// By default we use HMAC SHA-256\nvar payload = 'everybody dance NOW.';\nvar secret = 'supersecrettech';\nvar jwsObject = jws.sign(payload, secret);\n\njws.verify(jwsObject, secret) // === true\njws.verify(jwsObject, 'hax') // === false\n\n// If the `secret` is a RSA key, it will figure that out and sign it appropriately.\nvar privateKey = fs.readFileSync(process.env.HOME + '/.ssh/id_rsa');\nvar publicKey = fs.readFileSync(process.env.HOME + '/.ssh/id_rsa.pub');\nvar jwsObject = jws.sign(payload, privateKey);\n\njws.verify(jwsObject, publicKey) // === true\n\n// By default, the header will just include the algorithm detected by\n// the secret or key. If you want to add more info the the header, you\n// can do so explicitly.\n\nvar jwsHmacObject = jws.sign({\n  header: { alg: 'HS256', typ: 'JWT' },\n  payload: payload,\n  secret: secret,\n});\n\nvar jwsRsaSignedObject = jws.sign({\n  header: { alg: 'RS256', typ: 'Ham+Cheese' },\n  payload: payload,\n  key: privateKey,\n});\n```\n",
  "bugs": {
    "url": "https://github.com/brianloveswords/node-jws/issues"
  },
  "_id": "jws@0.0.2",
  "_from": "jws@0.0.2"
}
