{
  "name": "gapitoken",
  "version": "0.0.3",
  "description": "Node.js module for Google API service account authorization (Server to Server flow)",
  "main": "gapitoken.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/bsphere/node-gapitoken.git"
  },
  "keywords": [
    "jwt",
    "jws",
    "google",
    "api",
    "token",
    "service"
  ],
  "author": {
    "name": "Gal Ben-Haim"
  },
  "license": "MIT",
  "readmeFilename": "README.md",
  "dependencies": {
    "jws": "0.0.2"
  },
  "readme": "node-gapitoken\n==============\n\nNode.js module for Google API service account authorization (Server to Server flow). \n\nInstallation\n------------\n\n\tnpm install gapitoken\n\t\nUsage\n-----\n\n    var GAPI = require('gapitoken');\n \n    var gapi = new GAPI({\n        iss: 'service account email address from Google API console',\n        scope: 'space delimited list of requested scopes',\n        keyFile: 'path to private_key.pem'\n    }, function(err) {\n       if (err) { return console.log(err); }\n \n       gapi.getToken(function(err, token) {\n           if (err) { return console.log(err); }\n           console.log(token);\n       });     \n    });\n    \n* for using node-gapitoken to access Google Cloud Storage see https://github.com/bsphere/node-gcs\n\nCreating a Private key file\n---------------------------\n\n1) Login to Google API Console, and under \"API Access\" create a \"service account\" for your project.\n\n2) Download the .p12 private key file\n\n3) Convert the .p12 file to .pem: `openssl pkcs12 -in key.p12 -out key.pem -nocerts`\n\nNOTE: You must set a passphrase for the .pem file\n\n4) Remove the passphrase from the .pem file: `openssl rsa -in key.pem -out key.pem`\n",
  "bugs": {
    "url": "https://github.com/bsphere/node-gapitoken/issues"
  },
  "_id": "gapitoken@0.0.3",
  "_from": "gapitoken@0.0.3"
}
